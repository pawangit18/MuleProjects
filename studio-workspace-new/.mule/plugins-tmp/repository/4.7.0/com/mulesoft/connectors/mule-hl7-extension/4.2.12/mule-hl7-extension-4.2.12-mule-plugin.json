{
  "minMuleVersion": "4.1.1",
  "extensionModel": {
    "functions": [],
    "configurations": [{
      "externalLibraryModels": [],
      "operations": [
        {
          "semanticTerms": [],
          "visibility": "PUBLIC",
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "",
          "modelProperties": {"typeResolversInformation": {
            "partialTypeKeyResolver": false,
            "outputResolver": {
              "resolverName": "OUTPUT_PAYLOAD",
              "requiresConnection": true,
              "requiresConfiguration": true
            },
            "category": "ConnectorTypeLoader"
          }},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "semanticTerms": [],
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": [],
                      "parent": "",
                      "classname": "java.io.InputStream",
                      "hasDefaultConstructor": true,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Any"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "readContent",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"
                    },
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "HL7",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Error Mappings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Set of error mappings",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 12},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "error-mappings",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }},
                  "sinceMuleVersion": {"version": "4.4.0"}
                },
                "type": {
                  "item": {
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "errorMapping"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {
                            "typeId": "errorTypeMatcher",
                            "enum": {
                              "values": [
                                "ANY",
                                "REDELIVERY_EXHAUSTED",
                                "TRANSFORMATION",
                                "EXPRESSION",
                                "SECURITY",
                                "CLIENT_SECURITY",
                                "SERVER_SECURITY",
                                "ROUTING",
                                "CONNECTIVITY",
                                "RETRY_EXHAUSTED",
                                "TIMEOUT"
                              ],
                              "type": "[Ljava.lang.String;"
                            }
                          },
                          "type": "String"
                        },
                        "key": {"name": "source"}
                      },
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {"typeId": "errorTypeDefinition"},
                          "type": "String"
                        },
                        "key": {
                          "name": "target",
                          "required": "true"
                        }
                      }
                    ]
                  },
                  "format": "java",
                  "annotations": {
                    "typeDsl": {
                      "allowTopLevelDefinition": false,
                      "allowInlineDefinition": true
                    },
                    "infrastructureType": {},
                    "description": {"value": "Determines that an error thrown by this operation should be mapped to another"}
                  },
                  "type": "Array"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "errorMappings",
                "layoutModel": {
                  "password": false,
                  "tabName": "Error Mapping",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 4
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": [],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect-forever"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": [],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "ReconnectionStrategy"
                  },
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 6
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": true,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "annotations": {"classInformation": {
                "implementedInterfaces": [],
                "parent": "",
                "classname": "java.util.Map",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": [
                  "java.lang.String",
                  "java.lang.Object"
                ],
                "isInterface": true,
                "isAbstract": true,
                "isMap": true
              }},
              "type": "Object",
              "fields": [],
              "open": {
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": [],
                    "parent": "",
                    "classname": "java.lang.Object",
                    "hasDefaultConstructor": true,
                    "isInstantiable": true,
                    "isFinal": false,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "typeId": "java.lang.Object",
                  "typeAlias": {"value": "Object"}
                },
                "type": "Object",
                "fields": []
              }
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "read",
          "minMuleVersion": "4.1.1",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "HL7",
              "type": "PROCESSOR"
            },
            "namespace": "HL7",
            "type": "READ"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "HL7:WRITE",
            "HL7:UNKNOWN",
            "HL7:PARSE",
            "HL7:SCHEMA",
            "HL7:CONNECTIVITY",
            "HL7:RETRY_EXHAUSTED"
          ]
        },
        {
          "semanticTerms": [],
          "visibility": "PUBLIC",
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "",
          "modelProperties": {"typeResolversInformation": {
            "partialTypeKeyResolver": false,
            "inputResolvers": {"writeContent": {
              "resolverName": "INPUT",
              "requiresConnection": true,
              "requiresConfiguration": true
            }},
            "category": "ConnectorTypeLoader"
          }},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "semanticTerms": [],
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": [],
                      "parent": "",
                      "classname": "java.util.Map",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": [
                        "java.lang.String",
                        "java.lang.Object"
                      ],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": true
                    }},
                    "type": "Object",
                    "fields": [],
                    "open": {
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "java.lang.Object",
                          "hasDefaultConstructor": true,
                          "isInstantiable": true,
                          "isFinal": false,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "typeId": "java.lang.Object",
                        "typeAlias": {"value": "Object"}
                      },
                      "type": "Object",
                      "fields": []
                    }
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": true,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "writeContent",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"
                    },
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "HL7",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "Configure if repeatable streams should be used and their behaviour",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 2},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-byte-streaming-strategy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "of": [
                      {
                        "annotations": {
                          "infrastructureType": {},
                          "typeId": "repeatable-in-memory-stream"
                        },
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "This is the amount of memory that will be allocated in order to consume the stream and provide random access to it. If the stream contains more data than can be fit into this buffer, then it will be expanded by according to the bufferSizeIncrement attribute, with an upper limit of maxInMemorySize."}},
                            "model": {
                              "annotations": {
                                "default": "512",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "initialBufferSize"}
                          },
                          {
                            "annotations": {"description": {"value": "This is by how much will be buffer size by expanded if it exceeds its initial size. Setting a value of zero or lower will mean that the buffer should not expand, meaning that a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised when the buffer gets full."}},
                            "model": {
                              "annotations": {
                                "default": "512",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "bufferSizeIncrement"}
                          },
                          {
                            "annotations": {"description": {"value": "This is the maximum amount of memory that will be used. If more than that is used then a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised. A value lower or equal to zero means no limit."}},
                            "model": {
                              "annotations": {
                                "default": "1024",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "maxBufferSize"}
                          },
                          {
                            "annotations": {"description": {"value": "The unit in which all these attributes are expressed"}},
                            "model": {
                              "annotations": {
                                "default": "KB",
                                "enum": {
                                  "values": [
                                    "BYTE",
                                    "KB",
                                    "MB",
                                    "GB"
                                  ],
                                  "type": "[Ljava.lang.String;"
                                }
                              },
                              "type": "String"
                            },
                            "key": {"name": "bufferUnit"}
                          }
                        ]
                      },
                      {
                        "annotations": {
                          "QName": {"value": {
                            "localPart": "repeatable-file-store-stream",
                            "prefix": "ee",
                            "namespaceURI": "http://www.mulesoft.org/schema/mule/ee/core"
                          }},
                          "infrastructureType": {},
                          "typeId": "repeatable-file-store-stream"
                        },
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "Defines the maximum memory that the stream should use to keep data in memory. If more than that is consumed then it will start to buffer the content on disk."}},
                            "model": {
                              "annotations": {
                                "default": "512",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "inMemorySize"}
                          },
                          {
                            "annotations": {"description": {"value": "The unit in which maxInMemorySize is expressed"}},
                            "model": {
                              "annotations": {
                                "default": "KB",
                                "enum": {
                                  "values": [
                                    "BYTE",
                                    "KB",
                                    "MB",
                                    "GB"
                                  ],
                                  "type": "[Ljava.lang.String;"
                                }
                              },
                              "type": "String"
                            },
                            "key": {"name": "bufferUnit"}
                          }
                        ]
                      },
                      {
                        "annotations": {
                          "infrastructureType": {},
                          "description": {"value": "This configuration allows the input stream to be read only once. It will not allow to seek randomly which will limit the transformations that DW can perform on this stream. Use this option for use cases which just require moving data around from one system to another to get optimum performance."},
                          "typeId": "non-repeatable-stream"
                        },
                        "type": "Object",
                        "fields": []
                      }
                    ],
                    "format": "java",
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "ByteStreamingStrategy"
                    },
                    "type": "Union"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "streamingStrategy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Error Mappings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Set of error mappings",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 12},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "error-mappings",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }},
                  "sinceMuleVersion": {"version": "4.4.0"}
                },
                "type": {
                  "item": {
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "errorMapping"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {
                            "typeId": "errorTypeMatcher",
                            "enum": {
                              "values": [
                                "ANY",
                                "REDELIVERY_EXHAUSTED",
                                "TRANSFORMATION",
                                "EXPRESSION",
                                "SECURITY",
                                "CLIENT_SECURITY",
                                "SERVER_SECURITY",
                                "ROUTING",
                                "CONNECTIVITY",
                                "RETRY_EXHAUSTED",
                                "TIMEOUT"
                              ],
                              "type": "[Ljava.lang.String;"
                            }
                          },
                          "type": "String"
                        },
                        "key": {"name": "source"}
                      },
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {"typeId": "errorTypeDefinition"},
                          "type": "String"
                        },
                        "key": {
                          "name": "target",
                          "required": "true"
                        }
                      }
                    ]
                  },
                  "format": "java",
                  "annotations": {
                    "typeDsl": {
                      "allowTopLevelDefinition": false,
                      "allowInlineDefinition": true
                    },
                    "infrastructureType": {},
                    "description": {"value": "Determines that an error thrown by this operation should be mapped to another"}
                  },
                  "type": "Array"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "errorMappings",
                "layoutModel": {
                  "password": false,
                  "tabName": "Error Mapping",
                  "query": false,
                  "text": false,
                  "order": 6
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 4
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": [],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect-forever"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": [],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "ReconnectionStrategy"
                  },
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 7
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": {
                "validMimeTypes": ["application/plain"],
                "id": "application/plain",
                "label": "application/plain"
              },
              "annotations": {"classInformation": {
                "implementedInterfaces": [],
                "parent": "",
                "classname": "java.io.InputStream",
                "hasDefaultConstructor": true,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": [],
                "isInterface": false,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Any"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": true,
          "requiresConnection": true,
          "blocking": true,
          "name": "write",
          "minMuleVersion": "4.1.1",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "HL7",
              "type": "PROCESSOR"
            },
            "namespace": "HL7",
            "type": "WRITE"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "HL7:WRITE",
            "HL7:UNKNOWN",
            "HL7:PARSE",
            "HL7:SCHEMA",
            "HL7:CONNECTIVITY",
            "HL7:RETRY_EXHAUSTED"
          ]
        }
      ],
      "messageSources": [],
      "name": "config",
      "description": "",
      "minMuleVersion": "4.1.1",
      "modelProperties": {"requiredForMetadata": {"requiredParameters": [
        "appNamespaceIdSelf",
        "appUniversalIdSelf",
        "appUniversalIdTypeSelf",
        "appNamespaceIdPartner",
        "appUniversalIdPartner",
        "appUniversalIdTypePartner",
        "schemas",
        "eventMessageMap",
        "characterEncoding",
        "identKeys",
        "processingId",
        "genericExtensionPattern",
        "missingRequiredValueFail",
        "valueLengthErrorFail",
        "invalidCharacterInValueFail",
        "wrongValuesRepeatsFail",
        "unknownSegmentFail",
        "segmentOutOfOrderFail",
        "unusedSegmentPresentFail",
        "wrongSegmentsRepeatsFail",
        "parserSegmentTerminator",
        "fieldSeparator",
        "componentSeparator",
        "subcompSeparator",
        "repetitionSeparator",
        "escapeCharacter",
        "writerSegmentTerminator",
        "name"
      ]}},
      "stereotype": {
        "parent": {
          "namespace": "MULE",
          "type": "MODULE_CONFIG"
        },
        "namespace": "HL7",
        "type": "CONFIG"
      },
      "parameterGroupModels": [
        {
          "name": "General",
          "layoutModel": {
            "password": false,
            "query": false,
            "text": false,
            "order": 0
          },
          "description": "",
          "modelProperties": {},
          "parameters": [
            {
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "The identifier of this element used to reference it in other components",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": true,
              "expressionSupport": "NOT_SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "name",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 13
              },
              "allowedStereotypeModels": [],
              "isComponentId": true
            },
            {
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit.",
              "modelProperties": {
                "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 4},
                "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                  "localPart": "expiration-policy",
                  "prefix": "mule",
                  "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                }}
              },
              "type": {
                "format": "java",
                "annotations": {
                  "typeDsl": {
                    "allowTopLevelDefinition": false,
                    "allowInlineDefinition": true
                  },
                  "infrastructureType": {},
                  "classInformation": {
                    "implementedInterfaces": [],
                    "parent": "",
                    "classname": "org.mule.runtime.extension.api.runtime.ExpirationPolicy",
                    "hasDefaultConstructor": false,
                    "isInstantiable": false,
                    "isFinal": false,
                    "genericTypes": [],
                    "isInterface": true,
                    "isAbstract": true,
                    "isMap": false
                  },
                  "description": {"value": "Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit."},
                  "typeId": "org.mule.runtime.extension.api.runtime.ExpirationPolicy"
                },
                "type": "Object",
                "fields": [
                  {
                    "annotations": {
                      "description": {"value": "A scalar time value for the maximum amount of time a dynamic configuration instance should be allowed to be idle before it's considered eligible for expiration"},
                      "expressionSupport": {"value": "NOT_SUPPORTED"}
                    },
                    "model": {
                      "annotations": {
                        "default": "5",
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Long",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "key": {"name": "maxIdleTime"}
                  },
                  {
                    "annotations": {
                      "description": {"value": "A time unit that qualifies the maxIdleTime attribute"},
                      "expressionSupport": {"value": "NOT_SUPPORTED"}
                    },
                    "model": {
                      "annotations": {
                        "default": "MINUTES",
                        "enum": {
                          "values": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                          ],
                          "type": "[Ljava.lang.String;"
                        }
                      },
                      "type": "String"
                    },
                    "key": {"name": "timeUnit"}
                  }
                ]
              },
              "required": false,
              "expressionSupport": "NOT_SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": true,
                "allowsReferences": false
              },
              "name": "expirationPolicy",
              "layoutModel": {
                "password": false,
                "tabName": "Advanced",
                "query": false,
                "text": false,
                "order": 12
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            }
          ],
          "exclusiveParametersModels": [],
          "showInDsl": false
        },
        {
          "name": "Identity",
          "layoutModel": {
            "password": false,
            "query": false,
            "text": false,
            "order": 1
          },
          "description": "",
          "modelProperties": {},
          "parameters": [
            {
              "displayModel": {"displayName": "Mule Application Namespace ID (MSH-03/HD-01 or MSH-05/HD-01)"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "Application Namespace ID for Mule in message header (MSH segment). If this value is set, it effects both send and receive message handling. On the receive side, the MSH Receiving Application identification Namespace ID must match this value. On the send side, this value is used as the MSH Sending Application identification Namespace ID unless overridden in either the send configuration or the message parameters.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "appNamespaceIdSelf",
              "layoutModel": {
                "password": false,
                "tabName": "Identity",
                "query": false,
                "text": false,
                "order": 1
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Mule Application Universal ID (MSH-03/HD-02 or MSH-05/HD-02)"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "Application Universal ID for Mule in message header (MSH segment). If this value is set, it effects both send and receive message handling. On the receive side, the MSH Receiving Application identification Universal ID must match this value. On the send side, this value is used as the MSH Sending Application identification Universal ID unless overridden in either the send configuration or the message parameters.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "appUniversalIdSelf",
              "layoutModel": {
                "password": false,
                "tabName": "Identity",
                "query": false,
                "text": false,
                "order": 2
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Mule Application Universal ID Type (MSH-03/HD-03 or MSH-05/HD-03)"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "Application Universal ID Type for Mule in message header (MSH segment). If this value is set, it effects both send and receive message handling. On the receive side, the MSH Receiving Application identification Universal ID Type must match this value. On the send side, this value is used as the MSH Sending Application identification Universal ID Type unless overridden in either the send configuration or the message parameters.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "appUniversalIdTypeSelf",
              "layoutModel": {
                "password": false,
                "tabName": "Identity",
                "query": false,
                "text": false,
                "order": 3
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Partner Application Namespace ID (MSH-03/HD-01 or MSH-05/HD-01)"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "Application Namespace ID for Partner in message header (MSH segment). If this value is set, it effects both send and receive message handling. On the receive side, the MSH Sending Application identification Namespace ID must match this value. On the send side, this value is used as the MSH Receiving Application identification Namespace ID unless overridden in either the send configuration or the message parameters.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "appNamespaceIdPartner",
              "layoutModel": {
                "password": false,
                "tabName": "Identity",
                "query": false,
                "text": false,
                "order": 4
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Partner Application Universal ID (MSH-03/HD-02 or MSH-05/HD-02)"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "Application Universal ID for Partner in message header (MSH segment). If this value is set, it effects both send and receive message handling. On the receive side, the MSH Sending Application identification Universal ID must match this value. On the send side, this value is used as the MSH Receiving Application identification Universal ID unless overridden in either the send configuration or the message parameters.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "appUniversalIdPartner",
              "layoutModel": {
                "password": false,
                "tabName": "Identity",
                "query": false,
                "text": false,
                "order": 5
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Partner Application Universal ID Type (MSH-03/HD-03 or MSH-05/HD-03)"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "Application Universal ID Type for Partner in message header (MSH segment). If this value is set, it effects both send and receive message handling. On the receive side, the MSH Sending Application identification Universal ID Type must match this value. On the send side, this value is used as the MSH Receiving Application identification Universal ID Type unless overridden in either the send configuration or the message parameters.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "appUniversalIdTypePartner",
              "layoutModel": {
                "password": false,
                "tabName": "Identity",
                "query": false,
                "text": false,
                "order": 6
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            }
          ],
          "exclusiveParametersModels": [],
          "showInDsl": false
        },
        {
          "name": "Document",
          "layoutModel": {
            "password": false,
            "query": false,
            "text": false,
            "order": 2
          },
          "description": "",
          "modelProperties": {},
          "parameters": [
            {
              "displayModel": {"displayName": "Schema definitions"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "List of paths for schemas to be used by module. The paths may be either for file system or classpath.",
              "modelProperties": {},
              "type": {
                "item": {"type": "String"},
                "format": "java",
                "annotations": {"classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "java.util.List",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": false,
                  "genericTypes": ["java.lang.String"],
                  "isInterface": true,
                  "isAbstract": true,
                  "isMap": false
                }},
                "type": "Array"
              },
              "required": true,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": true,
                "allowsReferences": false
              },
              "name": "schemas",
              "layoutModel": {
                "password": false,
                "tabName": "Document",
                "query": false,
                "text": false,
                "order": 1
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Event and message to message structure map path"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "Path to a YAML file defining the mapping from event code to message code to message structure identifier. If working with multiple message structures this mapping definition supports using MSH-9-1 and MSH-9-2 to determine the message structure when MSH-9-3 is not present in a message. If only a single message structure is present in the schema(s) that message structure is used for parsing all messages, and if MSH-9-3 is present in a message the MSH-9-1 and MSH-9-2 values are ignored.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "eventMessageMap",
              "layoutModel": {
                "password": false,
                "tabName": "Document",
                "query": false,
                "text": false,
                "order": 2
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "HL7 Message character encoding"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "ASCII",
              "description": "Character encoding for HL7 messages. This is used as the default for receive messages, when MSH-18 is not present. It is also used as the default for send messages, when MSH-18 is not present in the send message data.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": [],
                    "parent": "java.lang.Enum",
                    "classname": "com.mulesoft.connectors.hl7.extension.api.config.CharacterEncoding",
                    "hasDefaultConstructor": false,
                    "isInstantiable": false,
                    "isFinal": true,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "typeId": "com.mulesoft.connectors.hl7.extension.api.config.CharacterEncoding",
                  "enum": {
                    "values": [
                      "ASCII",
                      "BIG_5",
                      "UTF_8",
                      "UTF_16",
                      "UTF_32",
                      "ISO_8859_1",
                      "ISO_8859_2",
                      "ISO_8859_3",
                      "ISO_8859_4",
                      "ISO_8859_5",
                      "ISO_8859_6",
                      "ISO_8859_7",
                      "ISO_8859_8",
                      "ISO_8859_9",
                      "ISO_8859_15",
                      "JIS_X0201",
                      "JIS0208",
                      "JIS_X0212",
                      "GB_18030",
                      "EUC_KR",
                      "EUC_TW"
                    ],
                    "type": "[Ljava.lang.String;"
                  }
                },
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "characterEncoding",
              "layoutModel": {
                "password": false,
                "tabName": "Document",
                "query": false,
                "text": false,
                "order": 8
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Disable numeric prefixes for data keys"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "true",
              "description": "Use segment and group identifiers directly as keys in data, rather than prefixing with position values.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {"typeId": "boolean"},
                "type": "Boolean"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "identKeys",
              "layoutModel": {
                "password": false,
                "tabName": "Document",
                "query": false,
                "text": false,
                "order": 9
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            }
          ],
          "exclusiveParametersModels": [],
          "showInDsl": false
        },
        {
          "name": "Parser",
          "layoutModel": {
            "password": false,
            "query": false,
            "text": false,
            "order": 3
          },
          "description": "",
          "modelProperties": {},
          "parameters": [
            {
              "displayModel": {"displayName": "Required processing ID"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "Value to match for MSH-11-1 processing ID. If set, only messages with the specified processing ID will be accepted for processing; messages with other processing ID values, or with no processing ID specified, will be rejected with an exception.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": [],
                    "parent": "java.lang.Enum",
                    "classname": "com.mulesoft.connectors.hl7.extension.api.config.ProcessingId",
                    "hasDefaultConstructor": false,
                    "isInstantiable": false,
                    "isFinal": true,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "typeId": "com.mulesoft.connectors.hl7.extension.api.config.ProcessingId",
                  "enum": {
                    "values": [
                      "DEBUGGING",
                      "PRODUCTION",
                      "TRAINING"
                    ],
                    "type": "[Ljava.lang.String;"
                  }
                },
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "processingId",
              "layoutModel": {
                "password": false,
                "tabName": "Parser",
                "query": false,
                "text": false,
                "order": 2
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Pattern for generic extension segment names"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "Java regular pattern for segment names to be treated as generic extension segments. If specified, segment names matching this pattern are allowed anywhere in the message and are converted to maps of string values for elements and composites.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "genericExtensionPattern",
              "layoutModel": {
                "password": false,
                "tabName": "Parser",
                "query": false,
                "text": false,
                "order": 2
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Fail when a required value is missing."},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "false",
              "description": "Fail when a required value is missing flag. If true, a message with this error is rejected; if false, the value is ignored and the message is not rejected. In either case the error is logged and reported in an ERR segment.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {"typeId": "boolean"},
                "type": "Boolean"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "missingRequiredValueFail",
              "layoutModel": {
                "password": false,
                "tabName": "Parser",
                "query": false,
                "text": false,
                "order": 3
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Fail when a value length is outside an allowed range."},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "false",
              "description": "Fail when receive value length outside allowed range flag. If true, a message with this error is rejected; if false, the value is used anyway and the message is not rejected. In either case the error is logged and reported in an ERR segment.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {"typeId": "boolean"},
                "type": "Boolean"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "valueLengthErrorFail",
              "layoutModel": {
                "password": false,
                "tabName": "Parser",
                "query": false,
                "text": false,
                "order": 4
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Fail when an invalid character is in a value."},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "false",
              "description": "Fail when receive value contains invalid characters flag. If true, a message with this error is rejected; if false, the character is either passed through or substituted and the message is not rejected. In either case the error is reported in an ERR segment.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {"typeId": "boolean"},
                "type": "Boolean"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "invalidCharacterInValueFail",
              "layoutModel": {
                "password": false,
                "tabName": "Parser",
                "query": false,
                "text": false,
                "order": 5
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Fail when there are too many repeats of a value."},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "false",
              "description": "Fail when receive value is repeated too many times. If true, a message with this error is rejected; if false, the value is accepted and the message is not rejected. In either case the error is reported in an ERR segment.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {"typeId": "boolean"},
                "type": "Boolean"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "wrongValuesRepeatsFail",
              "layoutModel": {
                "password": false,
                "tabName": "Parser",
                "query": false,
                "text": false,
                "order": 6
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Fail when an unknown segment is in the message."},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "false",
              "description": "Fail when an unknown segment is present in a message. If true, a message with this error is rejected; if false, the segment is ignored and the message is not rejected. In either case the error is reported in an ERR segment.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {"typeId": "boolean"},
                "type": "Boolean"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "unknownSegmentFail",
              "layoutModel": {
                "password": false,
                "tabName": "Parser",
                "query": false,
                "text": false,
                "order": 7
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Fail when a segment is out of order in a message."},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "false",
              "description": "Fail when a segment is out of order in a message. If true, a message with this error is rejected; if false and the segment can be reordered the message is not rejected. In either case the error is reported in an ERR segment.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {"typeId": "boolean"},
                "type": "Boolean"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "segmentOutOfOrderFail",
              "layoutModel": {
                "password": false,
                "tabName": "Parser",
                "query": false,
                "text": false,
                "order": 8
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Fail when an unused segment is included in a message."},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "false",
              "description": "Fail when a segment marked as Unused is included in a message. If true, a message with this error is rejected; if false, the message is not rejected and the unused segment is ignored. In either case the error is reported in an ERR segment.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {"typeId": "boolean"},
                "type": "Boolean"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "unusedSegmentPresentFail",
              "layoutModel": {
                "password": false,
                "tabName": "Parser",
                "query": false,
                "text": false,
                "order": 9
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Fail when there are too many repeats of a segment."},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "false",
              "description": "Fail when a segment occurs too many times in a message. If true, a message with this error is rejected; if false, the message is not rejected. In either case the error is reported in an ERR segment.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {"typeId": "boolean"},
                "type": "Boolean"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "wrongSegmentsRepeatsFail",
              "layoutModel": {
                "password": false,
                "tabName": "Parser",
                "query": false,
                "text": false,
                "order": 10
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "HL7 Message segment terminator"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "CR",
              "description": "Segment terminator for HL7 messages. This is used to recognize when a segment ends",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": [],
                    "parent": "java.lang.Enum",
                    "classname": "com.mulesoft.connectors.hl7.extension.api.config.SegmentTerminator",
                    "hasDefaultConstructor": false,
                    "isInstantiable": false,
                    "isFinal": true,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "typeId": "com.mulesoft.connectors.hl7.extension.api.config.SegmentTerminator",
                  "enum": {
                    "values": [
                      "CR",
                      "LF"
                    ],
                    "type": "[Ljava.lang.String;"
                  }
                },
                "type": "String"
              },
              "required": false,
              "expressionSupport": "NOT_SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "parserSegmentTerminator",
              "layoutModel": {
                "password": false,
                "tabName": "Parser",
                "query": false,
                "text": false,
                "order": 11
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            }
          ],
          "exclusiveParametersModels": [],
          "showInDsl": false
        },
        {
          "name": "Writer",
          "layoutModel": {
            "password": false,
            "query": false,
            "text": false,
            "order": 4
          },
          "description": "",
          "modelProperties": {},
          "parameters": [
            {
              "displayModel": {"displayName": "Field separator character"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "|",
              "description": "Optional data element separator character. The configured value is used by default for all output messages, but can be overridden at the message level.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "fieldSeparator",
              "layoutModel": {
                "password": false,
                "tabName": "Writer",
                "query": false,
                "text": false,
                "order": 1
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Component separator character"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "^",
              "description": "Optional component separator character. The configured value is used by default for all output messages, but can be overridden at the message level.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "componentSeparator",
              "layoutModel": {
                "password": false,
                "tabName": "Writer",
                "query": false,
                "text": false,
                "order": 2
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Sub component separator character"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "'",
              "description": "Optional sub component separator character. The configured value is used by default for all output messages, but can be overridden at the message level.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "subcompSeparator",
              "layoutModel": {
                "password": false,
                "tabName": "Writer",
                "query": false,
                "text": false,
                "order": 3
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Repetition separator character"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "~",
              "description": "Optional repetition separator character. The configured value is used by default for all output messages, but can be overridden at the message level.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "repetitionSeparator",
              "layoutModel": {
                "password": false,
                "tabName": "Writer",
                "query": false,
                "text": false,
                "order": 4
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Escape character"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "\\",
              "description": "Optional escape character. The configured value is used by default for all output messages, but can be overridden at the message level.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "escapeCharacter",
              "layoutModel": {
                "password": false,
                "tabName": "Writer",
                "query": false,
                "text": false,
                "order": 5
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "HL7 Message segment terminator"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "CR",
              "description": "Segment terminator for HL7 messages. This is used to recognize when a segment ends",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": [],
                    "parent": "java.lang.Enum",
                    "classname": "com.mulesoft.connectors.hl7.extension.api.config.SegmentTerminator",
                    "hasDefaultConstructor": false,
                    "isInstantiable": false,
                    "isFinal": true,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "typeId": "com.mulesoft.connectors.hl7.extension.api.config.SegmentTerminator",
                  "enum": {
                    "values": [
                      "CR",
                      "LF"
                    ],
                    "type": "[Ljava.lang.String;"
                  }
                },
                "type": "String"
              },
              "required": false,
              "expressionSupport": "NOT_SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "writerSegmentTerminator",
              "layoutModel": {
                "password": false,
                "tabName": "Writer",
                "query": false,
                "text": false,
                "order": 6
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            }
          ],
          "exclusiveParametersModels": [],
          "showInDsl": false
        }
      ],
      "connectionProviders": [{
        "externalLibraryModels": [],
        "semanticTerms": [],
        "connectionManagementType": "NONE",
        "supportsConnectivityTesting": true,
        "name": "connection",
        "description": "",
        "minMuleVersion": "4.1.1",
        "modelProperties": {},
        "stereotype": {
          "parent": {
            "namespace": "MULE",
            "type": "CONNECTION"
          },
          "namespace": "HL7",
          "type": "CONNECTION"
        },
        "parameterGroupModels": [{
          "name": "Connection",
          "layoutModel": {
            "password": false,
            "query": false,
            "text": false,
            "order": 1
          },
          "description": "",
          "modelProperties": {},
          "parameters": [{
            "semanticTerms": [],
            "role": "BEHAVIOUR",
            "description": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy",
            "modelProperties": {
              "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
              "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                "localPart": "reconnection",
                "prefix": "mule",
                "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
              }}
            },
            "type": {
              "format": "java",
              "annotations": {
                "infrastructureType": {},
                "typeId": "Reconnection"
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {"description": {"value": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy"}},
                  "model": {
                    "annotations": {"default": "false"},
                    "type": "Boolean"
                  },
                  "key": {"name": "failsDeployment"}
                },
                {
                  "annotations": {"description": {"value": "The reconnection strategy to use"}},
                  "model": {
                    "of": [
                      {
                        "annotations": {
                          "infrastructureType": {},
                          "typeId": "reconnect"
                        },
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                            "model": {
                              "annotations": {
                                "default": "2000",
                                "classInformation": {
                                  "implementedInterfaces": [],
                                  "parent": "java.lang.Number",
                                  "classname": "java.lang.Long",
                                  "hasDefaultConstructor": false,
                                  "isInstantiable": false,
                                  "isFinal": true,
                                  "genericTypes": [],
                                  "isInterface": false,
                                  "isAbstract": false,
                                  "isMap": false
                                },
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "frequency"}
                          },
                          {
                            "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                            "model": {
                              "annotations": {"default": "true"},
                              "type": "Boolean"
                            },
                            "key": {"name": "blocking"}
                          },
                          {
                            "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                            "model": {
                              "annotations": {
                                "default": "2",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "count"}
                          }
                        ]
                      },
                      {
                        "annotations": {
                          "infrastructureType": {},
                          "typeId": "reconnect-forever"
                        },
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                            "model": {
                              "annotations": {
                                "default": "2000",
                                "classInformation": {
                                  "implementedInterfaces": [],
                                  "parent": "java.lang.Number",
                                  "classname": "java.lang.Long",
                                  "hasDefaultConstructor": false,
                                  "isInstantiable": false,
                                  "isFinal": true,
                                  "genericTypes": [],
                                  "isInterface": false,
                                  "isAbstract": false,
                                  "isMap": false
                                },
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "frequency"}
                          },
                          {
                            "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                            "model": {
                              "annotations": {"default": "true"},
                              "type": "Boolean"
                            },
                            "key": {"name": "blocking"}
                          }
                        ]
                      }
                    ],
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "ReconnectionStrategy"
                    },
                    "type": "Union"
                  },
                  "key": {"name": "reconnectionStrategy"}
                }
              ]
            },
            "required": false,
            "expressionSupport": "NOT_SUPPORTED",
            "fieldValueProviderModels": [],
            "hasDynamicType": false,
            "isConfigOverride": false,
            "dslConfiguration": {
              "allowTopLevelDefinition": false,
              "allowsInlineDefinition": true,
              "allowsReferences": false
            },
            "name": "reconnection",
            "layoutModel": {
              "password": false,
              "tabName": "Advanced",
              "query": false,
              "text": false,
              "order": 1
            },
            "allowedStereotypeModels": [],
            "isComponentId": false
          }],
          "exclusiveParametersModels": [],
          "showInDsl": false
        }]
      }]
    }],
    "externalLibraries": [],
    "description": "",
    "modelProperties": {},
    "constructs": [],
    "connectionProviders": [],
    "privilegedArtifacts": [],
    "importedTypes": [],
    "xmlDsl": {
      "schemaVersion": "4.2.12",
      "prefix": "hl7",
      "schemaLocation": "http://www.mulesoft.org/schema/mule/hl7/current/mule-hl7.xsd",
      "namespace": "http://www.mulesoft.org/schema/mule/hl7",
      "xsdFileName": "mule-hl7.xsd"
    },
    "operations": [],
    "vendor": "Mulesoft",
    "types": [],
    "messageSources": [],
    "artifactCoordinates": {
      "group id": "com.mulesoft.connectors",
      "artifact id": "mule-hl7-extension",
      "version": "4.2.12"
    },
    "resources": [],
    "subTypes": [],
    "version": "4.2.12",
    "name": "HL7 EDI",
    "privilegedPackages": [],
    "minMuleVersion": "4.1.1",
    "category": "PREMIUM",
    "notifications": [],
    "errors": [
      {
        "parent": "MULE:TRANSFORMATION",
        "error": "HL7:WRITE",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "MULE:TRANSFORMATION",
        "handleable": true
      },
      {
        "error": "MULE:ANY",
        "handleable": true
      },
      {
        "parent": "MULE:TRANSFORMATION",
        "error": "HL7:PARSE",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "MULE:CONNECTIVITY",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "HL7:UNKNOWN",
        "handleable": true
      },
      {
        "parent": "MULE:CONNECTIVITY",
        "error": "HL7:CONNECTIVITY",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "MULE:RETRY_EXHAUSTED",
        "handleable": true
      },
      {
        "parent": "MULE:RETRY_EXHAUSTED",
        "error": "HL7:RETRY_EXHAUSTED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "MULE:VALIDATION",
        "handleable": true
      },
      {
        "parent": "MULE:VALIDATION",
        "error": "HL7:SCHEMA",
        "handleable": true
      }
    ],
    "supportedJavaVersions": [
      "1.8",
      "11",
      "17"
    ]
  }
}