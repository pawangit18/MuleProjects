<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:mule="http://www.mulesoft.org/schema/mule/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.mulesoft.org/schema/mule/hl7" attributeFormDefault="unqualified" elementFormDefault="qualified">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace"></xs:import>
  <xs:import namespace="http://www.mulesoft.org/schema/mule/core" schemaLocation="http://www.mulesoft.org/schema/mule/core/current/mule.xsd"></xs:import>
  <xs:element xmlns:mule="http://www.mulesoft.org/schema/mule/core" substitutionGroup="mule:abstract-shared-extension" name="config">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="mule:abstractExtensionType">
          <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:element minOccurs="0" maxOccurs="1" ref="mule:abstractConnectionProvider"></xs:element>
            <xs:element minOccurs="0" maxOccurs="1" ref="mule:expiration-policy"></xs:element>
            <xs:element minOccurs="0" maxOccurs="1" name="schemas">
              <xs:annotation>
                <xs:documentation>List of paths for schemas to be used by module. The paths may be either for file system or classpath.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="schema">
                    <xs:complexType>
                      <xs:attribute type="mule:expressionString" use="required" name="value"></xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute type="xs:string" use="required" name="name">
            <xs:annotation>
              <xs:documentation>The identifier of this element used to reference it in other components</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionString" use="optional" name="appNamespaceIdSelf">
            <xs:annotation>
              <xs:documentation>Application Namespace ID for Mule in message header (MSH segment). If this value is set, it effects both send and receive message handling. On the receive side, the MSH Receiving Application identification Namespace ID must match this value. On the send side, this value is used as the MSH Sending Application identification Namespace ID unless overridden in either the send configuration or the message parameters.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionString" use="optional" name="appUniversalIdSelf">
            <xs:annotation>
              <xs:documentation>Application Universal ID for Mule in message header (MSH segment). If this value is set, it effects both send and receive message handling. On the receive side, the MSH Receiving Application identification Universal ID must match this value. On the send side, this value is used as the MSH Sending Application identification Universal ID unless overridden in either the send configuration or the message parameters.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionString" use="optional" name="appUniversalIdTypeSelf">
            <xs:annotation>
              <xs:documentation>Application Universal ID Type for Mule in message header (MSH segment). If this value is set, it effects both send and receive message handling. On the receive side, the MSH Receiving Application identification Universal ID Type must match this value. On the send side, this value is used as the MSH Sending Application identification Universal ID Type unless overridden in either the send configuration or the message parameters.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionString" use="optional" name="appNamespaceIdPartner">
            <xs:annotation>
              <xs:documentation>Application Namespace ID for Partner in message header (MSH segment). If this value is set, it effects both send and receive message handling. On the receive side, the MSH Sending Application identification Namespace ID must match this value. On the send side, this value is used as the MSH Receiving Application identification Namespace ID unless overridden in either the send configuration or the message parameters.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionString" use="optional" name="appUniversalIdPartner">
            <xs:annotation>
              <xs:documentation>Application Universal ID for Partner in message header (MSH segment). If this value is set, it effects both send and receive message handling. On the receive side, the MSH Sending Application identification Universal ID must match this value. On the send side, this value is used as the MSH Receiving Application identification Universal ID unless overridden in either the send configuration or the message parameters.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionString" use="optional" name="appUniversalIdTypePartner">
            <xs:annotation>
              <xs:documentation>Application Universal ID Type for Partner in message header (MSH segment). If this value is set, it effects both send and receive message handling. On the receive side, the MSH Sending Application identification Universal ID Type must match this value. On the send side, this value is used as the MSH Receiving Application identification Universal ID Type unless overridden in either the send configuration or the message parameters.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionList" use="optional" name="schemas">
            <xs:annotation>
              <xs:documentation>List of paths for schemas to be used by module. The paths may be either for file system or classpath.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionString" use="optional" name="eventMessageMap">
            <xs:annotation>
              <xs:documentation>Path to a YAML file defining the mapping from event code to message code to message structure identifier. If working with multiple message structures this mapping definition supports using MSH-9-1 and MSH-9-2 to determine the message structure when MSH-9-3 is not present in a message. If only a single message structure is present in the schema(s) that message structure is used for parsing all messages, and if MSH-9-3 is present in a message the MSH-9-1 and MSH-9-2 values are ignored.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/hl7" type="com.mulesoft.connectors.hl7.extension.api.config.CharacterEncodingEnumType" use="optional" default="ASCII" name="characterEncoding">
            <xs:annotation>
              <xs:documentation>Character encoding for HL7 messages. This is used as the default for receive messages, when MSH-18 is not present. It is also used as the default for send messages, when MSH-18 is not present in the send message data.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionBoolean" use="optional" default="true" name="identKeys">
            <xs:annotation>
              <xs:documentation>Use segment and group identifiers directly as keys in data, rather than prefixing with position values.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/hl7" type="com.mulesoft.connectors.hl7.extension.api.config.ProcessingIdEnumType" use="optional" name="processingId">
            <xs:annotation>
              <xs:documentation>Value to match for MSH-11-1 processing ID. If set, only messages with the specified processing ID will be accepted for processing; messages with other processing ID values, or with no processing ID specified, will be rejected with an exception.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionString" use="optional" name="genericExtensionPattern">
            <xs:annotation>
              <xs:documentation>Java regular pattern for segment names to be treated as generic extension segments. If specified, segment names matching this pattern are allowed anywhere in the message and are converted to maps of string values for elements and composites.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionBoolean" use="optional" default="false" name="missingRequiredValueFail">
            <xs:annotation>
              <xs:documentation>Fail when a required value is missing flag. If true, a message with this error is rejected; if false, the value is ignored and the message is not rejected. In either case the error is logged and reported in an ERR segment.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionBoolean" use="optional" default="false" name="valueLengthErrorFail">
            <xs:annotation>
              <xs:documentation>Fail when receive value length outside allowed range flag. If true, a message with this error is rejected; if false, the value is used anyway and the message is not rejected. In either case the error is logged and reported in an ERR segment.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionBoolean" use="optional" default="false" name="invalidCharacterInValueFail">
            <xs:annotation>
              <xs:documentation>Fail when receive value contains invalid characters flag. If true, a message with this error is rejected; if false, the character is either passed through or substituted and the message is not rejected. In either case the error is reported in an ERR segment.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionBoolean" use="optional" default="false" name="wrongValuesRepeatsFail">
            <xs:annotation>
              <xs:documentation>Fail when receive value is repeated too many times. If true, a message with this error is rejected; if false, the value is accepted and the message is not rejected. In either case the error is reported in an ERR segment.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionBoolean" use="optional" default="false" name="unknownSegmentFail">
            <xs:annotation>
              <xs:documentation>Fail when an unknown segment is present in a message. If true, a message with this error is rejected; if false, the segment is ignored and the message is not rejected. In either case the error is reported in an ERR segment.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionBoolean" use="optional" default="false" name="segmentOutOfOrderFail">
            <xs:annotation>
              <xs:documentation>Fail when a segment is out of order in a message. If true, a message with this error is rejected; if false and the segment can be reordered the message is not rejected. In either case the error is reported in an ERR segment.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionBoolean" use="optional" default="false" name="unusedSegmentPresentFail">
            <xs:annotation>
              <xs:documentation>Fail when a segment marked as Unused is included in a message. If true, a message with this error is rejected; if false, the message is not rejected and the unused segment is ignored. In either case the error is reported in an ERR segment.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionBoolean" use="optional" default="false" name="wrongSegmentsRepeatsFail">
            <xs:annotation>
              <xs:documentation>Fail when a segment occurs too many times in a message. If true, a message with this error is rejected; if false, the message is not rejected. In either case the error is reported in an ERR segment.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/hl7" type="com.mulesoft.connectors.hl7.extension.api.config.SegmentTerminatorEnumType" use="optional" default="CR" name="parserSegmentTerminator">
            <xs:annotation>
              <xs:documentation>Segment terminator for HL7 messages. This is used to recognize when a segment ends</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionString" use="optional" default="|" name="fieldSeparator">
            <xs:annotation>
              <xs:documentation>Optional data element separator character. The configured value is used by default for all output messages, but can be overridden at the message level.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionString" use="optional" default="^" name="componentSeparator">
            <xs:annotation>
              <xs:documentation>Optional component separator character. The configured value is used by default for all output messages, but can be overridden at the message level.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionString" use="optional" default="'" name="subcompSeparator">
            <xs:annotation>
              <xs:documentation>Optional sub component separator character. The configured value is used by default for all output messages, but can be overridden at the message level.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionString" use="optional" default="~" name="repetitionSeparator">
            <xs:annotation>
              <xs:documentation>Optional repetition separator character. The configured value is used by default for all output messages, but can be overridden at the message level.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="mule:expressionString" use="optional" default="\" name="escapeCharacter">
            <xs:annotation>
              <xs:documentation>Optional escape character. The configured value is used by default for all output messages, but can be overridden at the message level.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/hl7" type="com.mulesoft.connectors.hl7.extension.api.config.SegmentTerminatorEnumType" use="optional" default="CR" name="writerSegmentTerminator">
            <xs:annotation>
              <xs:documentation>Segment terminator for HL7 messages. This is used to recognize when a segment ends</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element xmlns:mule="http://www.mulesoft.org/schema/mule/core" substitutionGroup="mule:abstractConnectionProvider" name="connection">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="mule:abstractConnectionProviderType">
          <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:element minOccurs="0" maxOccurs="1" ref="mule:reconnection"></xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/hl7" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="ReadType" substitutionGroup="mule:abstract-operator" name="read"></xs:element>
  <xs:complexType name="ReadType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractOperatorType">
        <xs:sequence minOccurs="0" maxOccurs="1">
          <xs:element minOccurs="0" maxOccurs="1" ref="mule:abstract-reconnection-strategy"></xs:element>
          <xs:element type="xs:string" minOccurs="0" maxOccurs="1" name="read-content"></xs:element>
        </xs:sequence>
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>The name of the configuration to be used to execute this component</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="target">
          <xs:annotation>
            <xs:documentation>The name of a variable on which the operation's output will be placed</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="mule:expressionString" use="optional" default="#[payload]" name="targetValue">
          <xs:annotation>
            <xs:documentation>An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/hl7" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="WriteType" substitutionGroup="mule:abstract-operator" name="write"></xs:element>
  <xs:complexType name="WriteType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractOperatorType">
        <xs:sequence minOccurs="0" maxOccurs="1">
          <xs:element minOccurs="0" maxOccurs="1" ref="mule:abstract-byte-streaming-strategy"></xs:element>
          <xs:element minOccurs="0" maxOccurs="1" ref="mule:abstract-reconnection-strategy"></xs:element>
          <xs:element type="xs:string" minOccurs="0" maxOccurs="1" name="write-content"></xs:element>
        </xs:sequence>
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>The name of the configuration to be used to execute this component</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="target">
          <xs:annotation>
            <xs:documentation>The name of a variable on which the operation's output will be placed</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="mule:expressionString" use="optional" default="#[payload]" name="targetValue">
          <xs:annotation>
            <xs:documentation>An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="com.mulesoft.connectors.hl7.extension.api.config.CharacterEncodingEnumType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ASCII"></xs:enumeration>
          <xs:enumeration value="BIG_5"></xs:enumeration>
          <xs:enumeration value="UTF_8"></xs:enumeration>
          <xs:enumeration value="UTF_16"></xs:enumeration>
          <xs:enumeration value="UTF_32"></xs:enumeration>
          <xs:enumeration value="ISO_8859_1"></xs:enumeration>
          <xs:enumeration value="ISO_8859_2"></xs:enumeration>
          <xs:enumeration value="ISO_8859_3"></xs:enumeration>
          <xs:enumeration value="ISO_8859_4"></xs:enumeration>
          <xs:enumeration value="ISO_8859_5"></xs:enumeration>
          <xs:enumeration value="ISO_8859_6"></xs:enumeration>
          <xs:enumeration value="ISO_8859_7"></xs:enumeration>
          <xs:enumeration value="ISO_8859_8"></xs:enumeration>
          <xs:enumeration value="ISO_8859_9"></xs:enumeration>
          <xs:enumeration value="ISO_8859_15"></xs:enumeration>
          <xs:enumeration value="JIS_X0201"></xs:enumeration>
          <xs:enumeration value="JIS0208"></xs:enumeration>
          <xs:enumeration value="JIS_X0212"></xs:enumeration>
          <xs:enumeration value="GB_18030"></xs:enumeration>
          <xs:enumeration value="EUC_KR"></xs:enumeration>
          <xs:enumeration value="EUC_TW"></xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="com.mulesoft.connectors.hl7.extension.api.config.ProcessingIdEnumType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="DEBUGGING"></xs:enumeration>
          <xs:enumeration value="PRODUCTION"></xs:enumeration>
          <xs:enumeration value="TRAINING"></xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="com.mulesoft.connectors.hl7.extension.api.config.SegmentTerminatorEnumType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="CR"></xs:enumeration>
          <xs:enumeration value="LF"></xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
</xs:schema>